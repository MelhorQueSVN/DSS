package View;


import dss.Facade;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Grupo 10
 */
public class Escolha_Componentes extends javax.swing.JFrame {

    private Facade fac;
    /**
     * Creates new form Escolha_Componentes
     */
    public Escolha_Componentes(Facade f) {
        initComponents();
        this.fac = f;
        Set<String> packs = null;
        try{
               packs = this.fac.getPacotes();
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
        if(packs == null) {JOptionPane.showMessageDialog(null,"Não existem pacotes disponíveis");}
        else{
                DefaultListModel listModel = new DefaultListModel();
                for(String s : packs){
                    PacDe.addItem(s);
                }
        }
         atualizarListas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        AdPac = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ComEscolh = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        PacEscolh = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        AdCom = new javax.swing.JButton();
        RemCom = new javax.swing.JButton();
        RemPac = new javax.swing.JButton();
        PacDe = new javax.swing.JComboBox<>();
        TipoCom = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPac = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCom = new javax.swing.JTable();
        Final = new javax.swing.JButton();
        Retroc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Escolha de Componentes");
        setResizable(false);

        AdPac.setText("Adicionar Pacote");
        AdPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdPacActionPerformed(evt);
            }
        });

        jLabel2.setText("Pacote(s) Escolhido(s)");

        jScrollPane2.setViewportView(ComEscolh);

        jScrollPane4.setViewportView(PacEscolh);

        jLabel4.setText("Componentes Escolhidos");

        AdCom.setText("Adicionar Componente");
        AdCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdComActionPerformed(evt);
            }
        });

        RemCom.setText("Remover Componente(s)");
        RemCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemComActionPerformed(evt);
            }
        });

        RemPac.setText("Remover Pacote(s)");
        RemPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemPacActionPerformed(evt);
            }
        });

        PacDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        PacDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PacDeActionPerformed(evt);
            }
        });

        TipoCom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DetalheExterior", "DetalheInterior", "Jantes", "Motor", "Pintura", "Pneu" }));
        TipoCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoComActionPerformed(evt);
            }
        });

        tblPac.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Preco"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblPac.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPac.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tblPac);

        tblCom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Preco"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblCom.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCom.getTableHeader().setReorderingAllowed(false);
        tblCom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblComMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblCom);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TipoCom, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AdCom))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(PacDe, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AdPac))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(RemPac, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RemCom, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(88, 88, 88))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PacDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AdPac))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TipoCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AdCom)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemPac)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RemCom)
                .addGap(251, 251, 251))
        );

        Final.setText("Finalizar");
        Final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalActionPerformed(evt);
            }
        });

        Retroc.setText("Retroceder");
        Retroc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetrocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Retroc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Final)
                        .addGap(98, 98, 98))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Final)
                    .addComponent(Retroc)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TipoComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoComActionPerformed
        // busca tipo de componente 
        String tipo = (String)TipoCom.getSelectedItem();
        try{
            // busca o map das componentes
            Map<String,Double> dados= this.fac.getComponentesdoTipo(tipo);
            //DefaultTableModel tbl = atualizarTabela(dados);
            //tblCom.setModel(tbl);
            tblCom.setModel(new CTM(dados));
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
        
    }//GEN-LAST:event_TipoComActionPerformed

    private DefaultTableModel atualizarTabela(Map<String,Double> fac){
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Nome");
        tbl.addColumn("Preco");
        for(Map.Entry<String,Double> e : fac.entrySet()){
            tbl.addRow(new Object[] {e.getKey(),e.getValue()});
        }
        return tbl;
    }
    
    private void FinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalActionPerformed
        try{
            if(fac.podefinalConfig()){
                new Confirmar_config(fac).setVisible(true);
                this.setVisible(false);
            }
            else{JOptionPane.showMessageDialog(null,"Tem que ter pelo menos um motor, um pneu, uma pintura e umas jantes selecionadas!");}
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e.getMessage());}
    }//GEN-LAST:event_FinalActionPerformed

    private void PacDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PacDeActionPerformed
        String pac = (String)PacDe.getSelectedItem();
        Map<String,Double> comps = new HashMap<>();
        try{
            comps = this.fac.getCompfromPack(pac);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e.getMessage());}
        //DefaultTableModel tbl = atualizarTabela(comps);
        //tblPac.setModel(tbl);
        tblPac.setModel(new CTM(comps));
    }//GEN-LAST:event_PacDeActionPerformed

    private void RetrocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetrocActionPerformed
        new Escolha_do_modelo(fac).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_RetrocActionPerformed

    private void RemComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemComActionPerformed
        String comp = (String)ComEscolh.getSelectedValue();
        try{
            if(comp!=null) {
                List<String> compretirados = fac.CompaRemoverString(comp);
                List<String> packsretirados = fac.PacoteaRemoverString(comp);
                boolean resposta = false;
                if(compretirados.size()>0 || packsretirados.size()>0){
                    Lista_de_remover tela1 = new Lista_de_remover(this,true,compretirados,packsretirados);
                    tela1.setVisible(true);
                    resposta = tela1.getResposta();
                } else resposta = true;
                if (resposta){
                    fac.removeComponente(comp);
                    fac.removerListaComponentes(compretirados);
                    fac.removerListaPacotes(packsretirados);
                }
                
                
            }
            
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        atualizarListas();
        
    }//GEN-LAST:event_RemComActionPerformed

    private void AdComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdComActionPerformed
        String comp = null;
        int index = tblCom.getSelectedRow();
        TableModel model = tblCom.getModel();
        if(index != -1){
            comp = (String)model.getValueAt(index,0);
        }
        boolean resposta = true; // recebe as respostas das telas secundarias
        try{
            if(comp!=null){
                if(!fac.verificaPresenca(comp)){
                    List<String> pr = new ArrayList<>();
                    pr.add(comp);
                    List<String> l = fac.verificarComponentesEmFalta(comp);
                    if (l.size()>0){
                        Lista_de_necessarios tela1 = new Lista_de_necessarios(this,true,l);
                        tela1.setVisible(true);
                        resposta = tela1.getResposta();
                    }
                    //fase 1 adicionar à lista ou nao
                    if(!resposta){ // se for true adiciona à lista
                        return;//apos a adicao avaliar as ComponentesIncompativeis
                    }
                    for(String s : l)
                    pr.add(s);
                        
                    List<String> comps = fac.verificarIncompatibilidade(pr);
                    List<String> pacotes = fac.verificarPacotesComComponentesIncompativeis(comps);
                    resposta = false;
                    if(comps.size()>0 || pacotes.size()>0){
                        Lista_de_incompativeis tela2 = new Lista_de_incompativeis(this,true,comps,pacotes);
                        tela2.setVisible(true);
                        resposta = tela2.getResposta();
                    } else resposta = true;
                    //fase 2
                    if(resposta){ // se for true elimina todos as componentes e os pacotes
                        fac.removerListaComponentes(comps);
                        fac.removerListaPacotes(pacotes);
                        fac.adiconarComponentes(pr);
                        fac.verificaConfAtual();
                    }
                    atualizarListas();
                } else {JOptionPane.showMessageDialog(null,"Já existe componente");}
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_AdComActionPerformed

    private void atualizarListas(){
        List<String> compesc = fac.getComponentesConfAtual();
        List<String> pacesc = fac.getPacotesConfAtual();
        DefaultListModel listModel1 = new DefaultListModel();
        compesc.forEach((c) -> {listModel1.addElement(c);});
        ComEscolh.setModel(listModel1);
        DefaultListModel listModel2 = new DefaultListModel();
        pacesc.forEach((p) -> {listModel2.addElement(p);});
        PacEscolh.setModel(listModel2);
    }
    
    
    private void AdPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdPacActionPerformed
         String pac = (String)PacDe.getSelectedItem();
        try{
            if(pac != null){
                Map<String,Double> obg = fac.compObrigatoriosM(pac);
                if (!obg.isEmpty()){
                    Componentes_necessarios cn = new Componentes_necessarios(this,true,obg);
                    cn.setVisible(true);
                    if(!cn.getResposta()) return;
                }
                Map<String,Double> inc = fac.verificarIncompatibilidade(pac);
                if (!inc.isEmpty()){
                    Componentes_incompativeis ci = new Componentes_incompativeis(this,true,inc);
                    ci.setVisible(true);
                    if(!ci.getResposta()) return;
                }
                fac.adicionaPacote(pac,obg.keySet(),inc.keySet());
            }
            else{JOptionPane.showMessageDialog(null,"Ainda não selecionou nenhum pacote!");}
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}

        atualizarListas();
    }//GEN-LAST:event_AdPacActionPerformed

    private void RemPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemPacActionPerformed
         String pack = (String)PacEscolh.getSelectedValue();
        try{
            List<String> compretirados = fac.pacote_CompremString(pack);
            List<String> packsretirados = fac.pacote_PacremString(pack);
            if(pack!=null) fac.removePacote(pack);
            else JOptionPane.showMessageDialog(null,"Ainda não selecionou nenhum componente pra remover!");
            if(compretirados.size()>0){
                 String s = "";
                 for(String c : compretirados){
                     s+= c + ";  ";
                 }
                 JOptionPane.showMessageDialog(null,"Foram retirados os seguintes componentes:  "+s);
            }
            if(packsretirados.size()>0){
                 String s = "";
                 for(String p : packsretirados){
                     s+= p + ";  ";
                 }
                 JOptionPane.showMessageDialog(null,"Foram retirados os seguintes pacotes:  "+s);
            }       
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e.getMessage());}
        
        atualizarListas();
    }//GEN-LAST:event_RemPacActionPerformed

    private void tblComMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComMouseClicked
        String s = null;

    }//GEN-LAST:event_tblComMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Escolha_Componentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Escolha_Componentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Escolha_Componentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Escolha_Componentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Escolha_Componentes(new Facade()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdCom;
    private javax.swing.JButton AdPac;
    private javax.swing.JList<String> ComEscolh;
    private javax.swing.JButton Final;
    private javax.swing.JComboBox<String> PacDe;
    private javax.swing.JList<String> PacEscolh;
    private javax.swing.JButton RemCom;
    private javax.swing.JButton RemPac;
    private javax.swing.JButton Retroc;
    private javax.swing.JComboBox<String> TipoCom;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable tblCom;
    private javax.swing.JTable tblPac;
    // End of variables declaration//GEN-END:variables
}
